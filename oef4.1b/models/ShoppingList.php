<?phpclass ShoppingList{    # eigenschappen of properties    # ze zijn public(vanbuiten kan gebruiken), private of protected    private $shop; # bevat een string, bv. "Zeeman" , grijs color: betekent dat is nog niet gebruikt maar definieert    private $date; # bevat DateTime    private $items = [];    private $lenghtevandenaam;    /**     * @param $shop     * @param $date     * @param array $items     */  public function __construct($p_shop, $p_date,array $p_items)  {      // print"IK BEN DE CONSTRUCTOR EN IK VOER NU ALLE CODE UIT DIE HIERIN GEDEFINIEERD IS";      // IPV > $this->lenghtevandenaam = strlen($p_shop); kan best met methode oproepen:      $this->setShop($p_shop);      $this->date = $p_date;      $this->items = $p_items;  }    /**     * @return string     */    public function getShop(): ?string  // return type (niet de value)als 0 value is    {        return $this->shop;    }    /**     * @return DateTime     */    public function getDate():DateTime    {        return $this->date;    }    /**     * @return string     */    public function getDateString():string    {        if ( $this->lenghtevandenaam < 6 )        {            die("Sorry hoor, maar ik kan u de DateString niet geven als de naam korter is dan 6 tekens");        }        return $this->date->format("d/m/Y");    }    /**     * @return array     */    public function getItems(): array    {        return $this->items;    }   # default: lege array    # een methode is een function in een class    public function setShop( $naam_winkel )    {        if (strlen($naam_winkel) < 4) die("Sorry, de naam moet minstens 3 karakters bevatten");        $this->lenghtevandenaam = strlen($naam_winkel);        $this->shop = $naam_winkel;        return $this;    }    /**     * @param DateTime $date     */    public function setDate(DateTime $date): self    {        $this->date = $date;        return $this;    }    /**     * @param array $items     */    public function setItems(array $items): self    {        $this->items = $items;        return $this;    }    public function getAllTheProperties()    {        return [$this->shop, $this->date, $this->items ];    }    public function empthy():self    {        $this->items = [];    //empthy array        return  $this;    }}